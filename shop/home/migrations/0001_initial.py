# Generated by Django 3.1.7 on 2021-03-28 18:19

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('sex', models.CharField(blank=True, choices=[(' ', ' '), ('м', 'мужской'), ('ж', 'женский')], default=' ', max_length=1, verbose_name='Пол')),
                ('role', models.CharField(choices=[('u', 'user/пользователь'), ('s', 'seller/продавец')], default='u', max_length=1, verbose_name='Роль')),
                ('is_moderated', models.BooleanField(default=False)),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('land', models.CharField(blank=True, max_length=30, null=True, verbose_name='Страна')),
                ('city', models.CharField(blank=True, max_length=50, null=True, verbose_name='Город')),
                ('avatat', models.ImageField(upload_to='users/avatars/')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Введите название текста', max_length=200, verbose_name='Название бренда')),
                ('slug', models.SlugField(max_length=200, null=True, unique=True)),
                ('logo', models.ImageField(blank=True, default=None, null=True, upload_to='brand_logo/')),
            ],
            options={
                'verbose_name': 'Бренд',
                'verbose_name_plural': 'Бренды',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Название категории', max_length=50, verbose_name='Название')),
                ('slug', models.SlugField(max_length=60, null=True, unique=True)),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='MadeIn',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Введите название страны', max_length=50, verbose_name='Страна производства')),
                ('slug', models.SlugField(null=True, unique=True)),
            ],
            options={
                'verbose_name': 'Старана производства',
                'verbose_name_plural': 'Страны производства',
            },
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Введите название категории', max_length=50, verbose_name='Название')),
                ('slug', models.SlugField(max_length=60, null=True, unique=True)),
                ('category', models.ForeignKey(blank=True, help_text='Выберите категорию', null=True, on_delete=django.db.models.deletion.RESTRICT, to='home.category', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Подкатегория',
                'verbose_name_plural': 'Подкатегории',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Введите название товара', max_length=250, verbose_name='Название')),
                ('slug', models.SlugField(max_length=250, null=True, unique=True)),
                ('description', models.TextField(help_text='Введите описание товара', verbose_name='Описание')),
                ('price', models.DecimalField(decimal_places=2, help_text='Введите цену товара', max_digits=12, verbose_name='Цена')),
                ('discount_price', models.DecimalField(blank=True, decimal_places=2, help_text='Введите цену товара со скидкой', max_digits=12, null=True, verbose_name='Цена со скидкой')),
                ('count', models.IntegerField(help_text='Введите количество товара на складе', verbose_name='Количество')),
                ('image', models.ImageField(blank=True, help_text='Добавьте изображение товара', null=True, upload_to='products/images/', verbose_name='Изображение')),
                ('available', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('brand', models.ForeignKey(help_text='Выберите бренд товара', on_delete=django.db.models.deletion.RESTRICT, to='home.brand', verbose_name='Бренд')),
                ('category', models.ForeignKey(help_text='Выберите категорию товара', on_delete=django.db.models.deletion.RESTRICT, to='home.category', verbose_name='Название категории')),
                ('made_in', models.ForeignKey(help_text='Выберите страну производителя', on_delete=django.db.models.deletion.RESTRICT, to='home.madein', verbose_name='Сделано в')),
                ('subcategory', models.ForeignKey(blank=True, help_text='Выберите подкатегорию товара', null=True, on_delete=django.db.models.deletion.RESTRICT, to='home.subcategory', verbose_name='Название подкатегории')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(help_text='Напишите комментарий', verbose_name='Комментарий')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('product', models.ForeignKey(help_text='Выберите товар для комментария', on_delete=django.db.models.deletion.CASCADE, to='home.product', verbose_name='Товар')),
                ('user', models.ForeignKey(help_text='Пользователь, написавший комментарий', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Комментарий',
                'verbose_name_plural': 'Комментарии',
                'ordering': ('-created',),
            },
        ),
    ]
